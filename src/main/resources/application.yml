spring:
  application:
    name: user-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/db-user}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:123456}
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: ${CHANGE_LOG:classpath:db/changelog/db.changelog-master.xml}
    enabled: true

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: ${JPA_DIALECT:org.hibernate.dialect.PostgreSQLDialect}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2.0
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    com.graduationproject.user_service: ${LOGGING_LEVEL_USER_SERVICE:DEBUG}
    org.springframework: ${LOGGING_LEVEL_SPRING:INFO}
    org.hibernate: ${LOGGING_LEVEL_HIBERNATE:INFO}
    org.springframework.amqp: ${LOGGING_LEVEL_AMQP:DEBUG}
    com.rabbitmq: ${LOGGING_LEVEL_RABBITMQ:DEBUG}
  file:
    name: ${LOGGING_FILE_NAME:logs/user-service.log}
  logback:
    rollingpolicy:
      max-file-size: ${LOGGING_MAX_FILE_SIZE:10MB}
      max-history: ${LOGGING_MAX_HISTORY:5}
      total-size-cap: ${LOGGING_TOTAL_SIZE_CAP:1GB}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

auth-service:
  url: ${AUTH_SERVICE_URL:http://localhost:8081/api}

rabbitmq:
  queue:
    user-created: ${RABBITMQ_QUEUE_USER_CREATED:user.created}
  exchange:
    user-events: ${RABBITMQ_EXCHANGE_USER_EVENTS:user.events}
  routing-key:
    user-created: ${RABBITMQ_ROUTING_KEY_USER_CREATED:user.created}

---
spring:
  config:
    activate:
      on-profile: dev
  liquibase:
    parameters:
      secureParsing: false
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

---
spring:
  config:
    activate:
      on-profile: prod
  liquibase:
    parameters:
      secureParsing: true
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
